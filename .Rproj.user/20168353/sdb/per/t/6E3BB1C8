{
    "collab_server" : "",
    "contents" : "\n\n#the class for the properties\nsetClass(\n  #name of the class\n  \"Property\",\n  \n  #attributes of the class\n  slots = list(description = \"character\")\n)\n\n#the class for the genes\nsetClass(\n  #name of the class\n  \"Gene\",\n  \n  #attributes of the class\n  slots = list(start = \"numeric\", end = \"numeric\", name = \"character\", strand = \"factor\", properties = \"vector\")\n)\n\n#the class for the genes\nsetClass(\n  #name of the class\n  \"Gene2\",\n  \n  #attributes of the class\n  slots = list(uniquename = \"factor\", msU7name = \"factor\", fgeneshName = \"factor\", rappredname = \"factor\", fmin = \"numeric\", fmax = \"numeric\",contig = \"factor\",iricname = \"factor\", strand = \"factor\", description = \"character\")\n)\n\n\n\n#the class for the chromosomes\nsetClass(\n  #name of the class\n  \"Chromosome\",\n  \n  #attributes of the class\n  slots = list(name = \"character\")\n)\n\n#the class for the locus\nsetClass(\n  #name of the class\n  \"Locus\",\n  \n  #attributes of the class\n  slots = list(start = \"numeric\", end = \"numeric\", genes = \"vector\", chromosome = \"numeric\")\n)\n\n#the class for the experiments\nsetClass(\n  #name of the class\n  \"Experiment\",\n  \n  #attributes of the class\n  slots = list(name = \"character\", date = \"character\", locus = \"Locus\")\n)\n\n#-----------------------------------\n\n#Methods\n\n\n#Generic Methods \n\nsetGeneric(name = \"ExistLocusOrNot\",\n           def = function(start){standardGeneric(\"ExistLocusOrNot\" )}\n)\n\nsetGeneric(name = \"importGeneDatas\",\n           def = function(database){standardGeneric(\"importGeneDatas\" )}\n)\n\nsetGeneric(name = \"importLocusDatas\",\n           def = function(database){standardGeneric(\"importLocusDatas\" )}\n)\n\n#Methods \n\nsetMethod(\"show\",\n          \"Locus\",\n          function(object){\n            cat (\"*** Class Locus , start is \" , object@start, \" end is\", object@end , \" and it's chromosome is \", object@chromosome)\n          }\n)\n\nsetMethod(f=\"importGeneDatas\",\n          signature = \"numeric\",\n          definition = function(database){\n            csv <- read.csv(\"./test/outputRAPDB.csv\")\n            genes <- vector(mode='list', length=nrow(csv))\n            for ( i in 1:nrow(csv) ) {\n              genes[i] <- new (\"Gene2\", uniquename = factor(csv[[1]][[i]]), msU7name = factor(csv[[9]][[i]]), fgeneshName = factor(csv[[4]][[i]]), rappredname = factor(csv[[5]][[i]]), fmin = csv[[6]][[i]], fmax = csv[[2]][[i]],contig = factor(csv[[7]][[i]]),iricname = factor(csv[[8]][[i]]), strand = factor(csv[[10]][[i]]), description = as.character(csv[[11]][[i]]))\n            }\n            return(genes)\n          }\n  \n)\n\nsetMethod(f=\"importLocusDatas\",\n          signature = \"numeric\",\n          definition = function(database){\n            table <- read.table(\"./test/text.txt\")\n            datas <- vector(mode='list', length=57)\n            for ( i in 1:nrow(test) ) {\n              datas[i] <- new (\"Locus\", start = table[[2]][[i]], end = table[[3]][[i]], chromosome = table[[1]][[i]])\n            }\n            return(datas)\n          }\n          \n)\n\nsetMethod(f=\"ExistLocusOrNot\",\n          signature = \"numeric\",\n          definition = function(start){\n            result <- FALSE\n            for (i in 1:length(datas)){\n              if(datas[[i]]@start == start){\n                result <- TRUE\n              }\n            }\n            return(result)\n          }\n)\n\n\n",
    "created" : 1497335724598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3859718225",
    "id" : "6E3BB1C8",
    "lastKnownWriteTime" : 1497253760,
    "last_content_update" : 1497253760,
    "path" : "~/Polytech-IG4/InternshipHanoi/RRicePackage/R/RRicePackage.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}